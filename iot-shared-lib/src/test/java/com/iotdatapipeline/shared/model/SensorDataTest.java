package com.iotdatapipeline.shared.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class SensorDataTest {

    private SensorData sensorData;

    @BeforeEach
    public void setup() {
        // Initialize a new SensorData object before each test
        sensorData = new SensorData();
    }

    @Test
    public void testSettersAndGetters() {
        // Set values using setters
        sensorData.setId("sensor_1");
        sensorData.setDeviceId("device_1");
        sensorData.setSensorType("temperature");
        sensorData.setValue(25.5);
        sensorData.setUnit("°C");
        sensorData.setTimestamp(System.currentTimeMillis());

        // Verify the values using getters
        assertEquals("sensor_1", sensorData.getId());
        assertEquals("device_1", sensorData.getDeviceId());
        assertEquals("temperature", sensorData.getSensorType());
        assertEquals(25.5, sensorData.getValue());
        assertEquals("°C", sensorData.getUnit());
        assertTrue(sensorData.getTimestamp() > 0);  // Ensure that timestamp is valid
    }

    @Test
    public void testConstructor() {
        // Create an instance using the all-args constructor
        long timestamp = System.currentTimeMillis();
        SensorData newSensorData = new SensorData("sensor_2", "device_2", "humidity", 45.5, "%", timestamp);

        // Verify that values are correctly set via the constructor
        assertEquals("sensor_2", newSensorData.getId());
        assertEquals("device_2", newSensorData.getDeviceId());
        assertEquals("humidity", newSensorData.getSensorType());
        assertEquals(45.5, newSensorData.getValue());
        assertEquals("%", newSensorData.getUnit());
        assertEquals(timestamp, newSensorData.getTimestamp());
    }

    @Test
    public void testToString() {
        // Set values
        sensorData.setId("sensor_3");
        sensorData.setDeviceId("device_3");
        sensorData.setSensorType("pressure");
        sensorData.setValue(1013.25);
        sensorData.setUnit("hPa");
        sensorData.setTimestamp(System.currentTimeMillis());

        // Expected toString format
        String expectedString = "SensorData(id=sensor_3, deviceId=device_3, sensorType=pressure, value=1013.25, unit=hPa, timestamp=" + sensorData.getTimestamp() + ")";

        // Verify the toString method generated by Lombok
        assertEquals(expectedString, sensorData.toString());
    }

    @Test
    public void testEqualsAndHashCode() {
        // Create two SensorData objects with the same values
        SensorData sensorData1 = new SensorData("sensor_4", "device_4", "light", 400.5, "lux", System.currentTimeMillis());
        SensorData sensorData2 = new SensorData("sensor_4", "device_4", "light", 400.5, "lux", sensorData1.getTimestamp());

        // Verify that the objects are equal and have the same hashCode
        assertEquals(sensorData1, sensorData2);
        assertEquals(sensorData1.hashCode(), sensorData2.hashCode());

        // Modify one property to make the objects different
        sensorData2.setSensorType("temperature");

        // Verify they are not equal after modification
        assertNotEquals(sensorData1, sensorData2);
    }
}

